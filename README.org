#+OPTIONS: f:nil
#+TODO: TODO(t) IN-PROGRESS(i) DONE(d)
* Installation
... is easy!

1) A home for bam.

   - Choose the directory in which you want *bam* to live...
     #+begin_src sh
     cd /path/to/bams/new/home
     #+end_src

   - ... and bring him home
     #+begin_src sh
     git clone ...
     #+end_src

2) Bam wakes up.

   After a long trip through the interwebs, bam might be napping. You
   want to make sure that bam is awake and ready to start playing. Get
   closer and give bam a gentle pat on the head:
   #+begin_src sh
   cd bam
   chmod +x bam.py
   #+end_src

3) A name for bam.

   Throughout your day you probably need to be in a lot of different
   places. While you're working, you can't stay right by bam's side
   the whole time. You want bam to respond to your calls even if
   you're far away. That is what /names/ are for:
   #+begin_src sh
   sudo ln -s ~+/bam.py /usr/bin/BAMS-NEW-NAME
   #+end_src
   You can name bam anything you like. For example, BAMS-NEW-NAME
   could be zed, mia, or even marcellus.

4) Bam gets ready.

   Almost there. The last thing left to do is for bam to unpack and
   set up the toy box:
   #+begin_src sh
   bam setup
   #+end_src
   Make sure you call bam by the name you chose in step 3 when doing
   this.

There you go. Now it's time to start teaching bam some commands.

* Examples
#+BEGIN_EXAMPLE
ID  COMMAND                          ALIAS
0   git push origin master           push it real good
1   cp -R * [0]                      copy all files to [0]
2   ls [0] | grep [1]                show me all [1] files in [0]
3   rm *~                            get rid of temp files
4   du -sh /var/cache/apt/archives/  how big is apt cache
5   chmod +x [0]                     make [0] executable
6   bam list                         show me my aliases
7   grep -lr [0] ./*                 list files containing [0]
#+END_EXAMPLE

* Credits
BAM was, among other things, inspired by Zach Holman's very cool [[https://github.com/holman/boom][boom]]
app.
